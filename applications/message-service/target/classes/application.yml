server:
  port: 8600

spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: message-service

  jpa:
    database: POSTGRESQL
    show-sql: true
    hibernate:
      ddl-auto: validate

  datasource:
    driver-class-name: org.postgresql.Driver
    platform: postgres
    url: jdbc:postgresql://localhost:5432/tcc?
      ssl=true&
      sslmode=verify-ca&
      sslcert=${DATABASE_CERT_PATH}&
      sslkey=${DATABASE_KEY_PATH}&
      sslrootcert=${DATABASE_CA_PATH}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}

eureka:
  client:
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka

amazonProperties:
  endpointUrl: https://s3.sa-east-1.amazonaws.com
  accessKey: ${AWS_ACCESS_KEY}
  secretKey: ${AWS_SECRET_KEY}
  bucketName: ${AWS_BUCKET_NAME}

fabric:
  admin:
    username: ${FABRIC_USERNAME}
    password: ${FABRIC_PASSWORD}
  ca:
    org1:
      url: http://localhost:7054
  orderer:
    url: grpc://localhost:7050
    name: orderer.example.com
  channel:
    name: mychannel
  org1:
    name: org1
    msp: Org1MSP
    peer0:
      name: peer0.org1.example.com
      url: grpc://localhost:7051
    peer1:
      name: peer1.org1.example.com
      url: grpc://localhost:8051
    peer2:
      name: peer2.org1.example.com
      url: grpc://localhost:9051
    peer3:
      name: peer3.org1.example.com
      url: grpc://localhost:10051
  userDirectoryPath: src/main/resources/user